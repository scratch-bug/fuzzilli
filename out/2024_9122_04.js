const wasm_code_a = new Uint8Array([
    0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x0d, 0x05, 0x01, 0x00,
    0x40, 0x7f, 0x07, 0x07, 0x01, 0x03, 0x74, 0x61, 0x67, 0x04, 0x00
]);

const wasm_code_b = new Uint8Array([
    0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x09, 0x02, 0x60,
    0x01, 0x7f, 0x00, 0x60, 0x00, 0x01, 0x7f, 0x02, 0x09, 0x01, 0x01, 0x61,
    0x03, 0x74, 0x61, 0x67, 0x04, 0x00, 0x0d, 0x04, 0x01, 0x00, 0x40, 0x03,
    0x02, 0x01, 0x01, 0x07, 0x07, 0x01, 0x03, 0x72, 0x75, 0x6e, 0x00, 0x00,
    0x0a, 0x0c, 0x01, 0x0a, 0x00, 0x06, 0x7f, 0x04, 0x08, 0x01, 0x0b, 0x07,
    0x00, 0x0b
]);

let trigger_bug = false;
for (let i = 0; i < 100; i++) {
    if (i === 99) {
        trigger_bug = true;
    }

    if (trigger_bug) {
        const module_a = new WebAssembly.Module(wasm_code_a);
        const instance_a = new WebAssembly.Instance(module_a, {});
        const module_b = new WebAssembly.Module(wasm_code_b);
        const imports = {
            a: {
                tag: instance_a.exports.tag
            }
        };
        const instance_b = new WebAssembly.Instance(module_b, imports);
        instance_b.exports.run();
    } else {
        1 + 1;
    }
}