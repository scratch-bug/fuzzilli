// Copyright 2025 Google LLC
//
// Licensed under the Apache License, Version 2.0 (the "License");
// you may not use this file except in compliance with the License.
// You may obtain a copy of the License at
//
// https://www.apache.org/licenses/LICENSE-2.0
//
// Unless required by applicable law or agreed to in writing, software
// distributed under the License is distributed on an "AS IS" BASIS,
// WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
// See the License for the specific language governing permissions and
// limitations under the License.

// This file is autogenerated. Please check the README.

syntax = "proto3";
package fuzzilli.protobuf;

import "operations.proto";

message Instruction {
    // The operation is either encoded as an index, referring to the nth operation
    // (so that shared operations are also only present once in the protobuf), or
    // as one of the many concrete Operation messages.
    repeated uint32 inouts = 1;
    oneof operation {
        uint32 opIdx = 2;
        Nop nop = 3;
        LoadInteger loadInteger = 4;
        LoadBigInt loadBigInt = 5;
        LoadFloat loadFloat = 6;
        LoadString loadString = 7;
        LoadBoolean loadBoolean = 8;
        LoadUndefined loadUndefined = 9;
        LoadNull loadNull = 10;
        LoadThis loadThis = 11;
        LoadArguments loadArguments = 12;
        CreateNamedVariable createNamedVariable = 13;
        LoadDisposableVariable loadDisposableVariable = 14;
        LoadAsyncDisposableVariable loadAsyncDisposableVariable = 15;
        LoadRegExp loadRegExp = 16;
        BeginObjectLiteral beginObjectLiteral = 17;
        ObjectLiteralAddProperty objectLiteralAddProperty = 18;
        ObjectLiteralAddElement objectLiteralAddElement = 19;
        ObjectLiteralAddComputedProperty objectLiteralAddComputedProperty = 20;
        ObjectLiteralCopyProperties objectLiteralCopyProperties = 21;
        ObjectLiteralSetPrototype objectLiteralSetPrototype = 22;
        BeginObjectLiteralMethod beginObjectLiteralMethod = 23;
        EndObjectLiteralMethod endObjectLiteralMethod = 24;
        BeginObjectLiteralComputedMethod beginObjectLiteralComputedMethod = 25;
        EndObjectLiteralComputedMethod endObjectLiteralComputedMethod = 26;
        BeginObjectLiteralGetter beginObjectLiteralGetter = 27;
        EndObjectLiteralGetter endObjectLiteralGetter = 28;
        BeginObjectLiteralSetter beginObjectLiteralSetter = 29;
        EndObjectLiteralSetter endObjectLiteralSetter = 30;
        EndObjectLiteral endObjectLiteral = 31;
        BeginClassDefinition beginClassDefinition = 32;
        BeginClassConstructor beginClassConstructor = 33;
        EndClassConstructor endClassConstructor = 34;
        ClassAddInstanceProperty classAddInstanceProperty = 35;
        ClassAddInstanceElement classAddInstanceElement = 36;
        ClassAddInstanceComputedProperty classAddInstanceComputedProperty = 37;
        BeginClassInstanceMethod beginClassInstanceMethod = 38;
        EndClassInstanceMethod endClassInstanceMethod = 39;
        BeginClassInstanceComputedMethod beginClassInstanceComputedMethod = 40;
        EndClassInstanceComputedMethod endClassInstanceComputedMethod = 41;
        BeginClassInstanceGetter beginClassInstanceGetter = 42;
        EndClassInstanceGetter endClassInstanceGetter = 43;
        BeginClassInstanceSetter beginClassInstanceSetter = 44;
        EndClassInstanceSetter endClassInstanceSetter = 45;
        ClassAddStaticProperty classAddStaticProperty = 46;
        ClassAddStaticElement classAddStaticElement = 47;
        ClassAddStaticComputedProperty classAddStaticComputedProperty = 48;
        BeginClassStaticInitializer beginClassStaticInitializer = 49;
        EndClassStaticInitializer endClassStaticInitializer = 50;
        BeginClassStaticMethod beginClassStaticMethod = 51;
        EndClassStaticMethod endClassStaticMethod = 52;
        BeginClassStaticComputedMethod beginClassStaticComputedMethod = 53;
        EndClassStaticComputedMethod endClassStaticComputedMethod = 54;
        BeginClassStaticGetter beginClassStaticGetter = 55;
        EndClassStaticGetter endClassStaticGetter = 56;
        BeginClassStaticSetter beginClassStaticSetter = 57;
        EndClassStaticSetter endClassStaticSetter = 58;
        ClassAddPrivateInstanceProperty classAddPrivateInstanceProperty = 59;
        BeginClassPrivateInstanceMethod beginClassPrivateInstanceMethod = 60;
        EndClassPrivateInstanceMethod endClassPrivateInstanceMethod = 61;
        ClassAddPrivateStaticProperty classAddPrivateStaticProperty = 62;
        BeginClassPrivateStaticMethod beginClassPrivateStaticMethod = 63;
        EndClassPrivateStaticMethod endClassPrivateStaticMethod = 64;
        EndClassDefinition endClassDefinition = 65;
        CreateArray createArray = 66;
        CreateIntArray createIntArray = 67;
        CreateFloatArray createFloatArray = 68;
        CreateArrayWithSpread createArrayWithSpread = 69;
        CreateTemplateString createTemplateString = 70;
        GetProperty getProperty = 71;
        SetProperty setProperty = 72;
        UpdateProperty updateProperty = 73;
        DeleteProperty deleteProperty = 74;
        ConfigureProperty configureProperty = 75;
        GetElement getElement = 76;
        SetElement setElement = 77;
        UpdateElement updateElement = 78;
        DeleteElement deleteElement = 79;
        ConfigureElement configureElement = 80;
        GetComputedProperty getComputedProperty = 81;
        SetComputedProperty setComputedProperty = 82;
        UpdateComputedProperty updateComputedProperty = 83;
        DeleteComputedProperty deleteComputedProperty = 84;
        ConfigureComputedProperty configureComputedProperty = 85;
        TypeOf typeOf = 86;
        Void void = 87;
        TestInstanceOf testInstanceOf = 88;
        TestIn testIn = 89;
        BeginPlainFunction beginPlainFunction = 90;
        EndPlainFunction endPlainFunction = 91;
        BeginArrowFunction beginArrowFunction = 92;
        EndArrowFunction endArrowFunction = 93;
        BeginGeneratorFunction beginGeneratorFunction = 94;
        EndGeneratorFunction endGeneratorFunction = 95;
        BeginAsyncFunction beginAsyncFunction = 96;
        EndAsyncFunction endAsyncFunction = 97;
        BeginAsyncArrowFunction beginAsyncArrowFunction = 98;
        EndAsyncArrowFunction endAsyncArrowFunction = 99;
        BeginAsyncGeneratorFunction beginAsyncGeneratorFunction = 100;
        EndAsyncGeneratorFunction endAsyncGeneratorFunction = 101;
        BeginConstructor beginConstructor = 102;
        EndConstructor endConstructor = 103;
        Directive directive = 104;
        Return return = 105;
        Yield yield = 106;
        YieldEach yieldEach = 107;
        Await await = 108;
        CallFunction callFunction = 109;
        CallFunctionWithSpread callFunctionWithSpread = 110;
        Construct construct = 111;
        ConstructWithSpread constructWithSpread = 112;
        CallMethod callMethod = 113;
        CallMethodWithSpread callMethodWithSpread = 114;
        CallComputedMethod callComputedMethod = 115;
        CallComputedMethodWithSpread callComputedMethodWithSpread = 116;
        UnaryOperation unaryOperation = 117;
        BinaryOperation binaryOperation = 118;
        TernaryOperation ternaryOperation = 119;
        Update update = 120;
        Dup dup = 121;
        Reassign reassign = 122;
        DestructArray destructArray = 123;
        DestructArrayAndReassign destructArrayAndReassign = 124;
        DestructObject destructObject = 125;
        DestructObjectAndReassign destructObjectAndReassign = 126;
        Compare compare = 127;
        Eval eval = 128;
        BeginWith beginWith = 129;
        EndWith endWith = 130;
        CallSuperConstructor callSuperConstructor = 131;
        CallSuperMethod callSuperMethod = 132;
        GetPrivateProperty getPrivateProperty = 133;
        SetPrivateProperty setPrivateProperty = 134;
        UpdatePrivateProperty updatePrivateProperty = 135;
        CallPrivateMethod callPrivateMethod = 136;
        GetSuperProperty getSuperProperty = 137;
        SetSuperProperty setSuperProperty = 138;
        GetComputedSuperProperty getComputedSuperProperty = 139;
        SetComputedSuperProperty setComputedSuperProperty = 140;
        UpdateSuperProperty updateSuperProperty = 141;
        BeginIf beginIf = 142;
        BeginElse beginElse = 143;
        EndIf endIf = 144;
        BeginWhileLoopHeader beginWhileLoopHeader = 145;
        BeginWhileLoopBody beginWhileLoopBody = 146;
        EndWhileLoop endWhileLoop = 147;
        BeginDoWhileLoopBody beginDoWhileLoopBody = 148;
        BeginDoWhileLoopHeader beginDoWhileLoopHeader = 149;
        EndDoWhileLoop endDoWhileLoop = 150;
        BeginForLoopInitializer beginForLoopInitializer = 151;
        BeginForLoopCondition beginForLoopCondition = 152;
        BeginForLoopAfterthought beginForLoopAfterthought = 153;
        BeginForLoopBody beginForLoopBody = 154;
        EndForLoop endForLoop = 155;
        BeginForInLoop beginForInLoop = 156;
        EndForInLoop endForInLoop = 157;
        BeginForOfLoop beginForOfLoop = 158;
        BeginForOfLoopWithDestruct beginForOfLoopWithDestruct = 159;
        EndForOfLoop endForOfLoop = 160;
        BeginRepeatLoop beginRepeatLoop = 161;
        EndRepeatLoop endRepeatLoop = 162;
        LoopBreak loopBreak = 163;
        LoopContinue loopContinue = 164;
        BeginTry beginTry = 165;
        BeginCatch beginCatch = 166;
        BeginFinally beginFinally = 167;
        EndTryCatchFinally endTryCatchFinally = 168;
        ThrowException throwException = 169;
        BeginCodeString beginCodeString = 170;
        EndCodeString endCodeString = 171;
        BeginBlockStatement beginBlockStatement = 172;
        EndBlockStatement endBlockStatement = 173;
        BeginSwitch beginSwitch = 174;
        BeginSwitchCase beginSwitchCase = 175;
        BeginSwitchDefaultCase beginSwitchDefaultCase = 176;
        EndSwitchCase endSwitchCase = 177;
        EndSwitch endSwitch = 178;
        SwitchBreak switchBreak = 179;
        LoadNewTarget loadNewTarget = 180;
        Print print = 181;
        Explore explore = 182;
        Probe probe = 183;
        Fixup fixup = 184;
        BeginWasmModule beginWasmModule = 185;
        EndWasmModule endWasmModule = 186;
        CreateWasmGlobal createWasmGlobal = 187;
        CreateWasmMemory createWasmMemory = 188;
        CreateWasmTable createWasmTable = 189;
        CreateWasmJSTag createWasmJSTag = 190;
        CreateWasmTag createWasmTag = 191;
        WrapPromising wrapPromising = 192;
        WrapSuspending wrapSuspending = 193;
        BindMethod bindMethod = 194;
        BindFunction bindFunction = 195;
        Consti64 consti64 = 196;
        Consti32 consti32 = 197;
        Constf32 constf32 = 198;
        Constf64 constf64 = 199;
        WasmReturn wasmReturn = 200;
        WasmJsCall wasmJsCall = 201;
        Wasmi32CompareOp wasmi32CompareOp = 202;
        Wasmi64CompareOp wasmi64CompareOp = 203;
        Wasmf32CompareOp wasmf32CompareOp = 204;
        Wasmf64CompareOp wasmf64CompareOp = 205;
        Wasmi32EqualZero wasmi32EqualZero = 206;
        Wasmi64EqualZero wasmi64EqualZero = 207;
        Wasmi32BinOp wasmi32BinOp = 208;
        Wasmi64BinOp wasmi64BinOp = 209;
        Wasmi32UnOp wasmi32UnOp = 210;
        Wasmi64UnOp wasmi64UnOp = 211;
        Wasmf32BinOp wasmf32BinOp = 212;
        Wasmf64BinOp wasmf64BinOp = 213;
        Wasmf32UnOp wasmf32UnOp = 214;
        Wasmf64UnOp wasmf64UnOp = 215;
        WasmWrapi64Toi32 wasmWrapi64Toi32 = 216;
        WasmTruncatef32Toi32 wasmTruncatef32Toi32 = 217;
        WasmTruncatef64Toi32 wasmTruncatef64Toi32 = 218;
        WasmExtendi32Toi64 wasmExtendi32Toi64 = 219;
        WasmTruncatef32Toi64 wasmTruncatef32Toi64 = 220;
        WasmTruncatef64Toi64 wasmTruncatef64Toi64 = 221;
        WasmConverti32Tof32 wasmConverti32Tof32 = 222;
        WasmConverti64Tof32 wasmConverti64Tof32 = 223;
        WasmDemotef64Tof32 wasmDemotef64Tof32 = 224;
        WasmConverti32Tof64 wasmConverti32Tof64 = 225;
        WasmConverti64Tof64 wasmConverti64Tof64 = 226;
        WasmPromotef32Tof64 wasmPromotef32Tof64 = 227;
        WasmReinterpretf32Asi32 wasmReinterpretf32Asi32 = 228;
        WasmReinterpretf64Asi64 wasmReinterpretf64Asi64 = 229;
        WasmReinterpreti32Asf32 wasmReinterpreti32Asf32 = 230;
        WasmReinterpreti64Asf64 wasmReinterpreti64Asf64 = 231;
        WasmSignExtend8Intoi32 wasmSignExtend8Intoi32 = 232;
        WasmSignExtend16Intoi32 wasmSignExtend16Intoi32 = 233;
        WasmSignExtend8Intoi64 wasmSignExtend8Intoi64 = 234;
        WasmSignExtend16Intoi64 wasmSignExtend16Intoi64 = 235;
        WasmSignExtend32Intoi64 wasmSignExtend32Intoi64 = 236;
        WasmTruncateSatf32Toi32 wasmTruncateSatf32Toi32 = 237;
        WasmTruncateSatf64Toi32 wasmTruncateSatf64Toi32 = 238;
        WasmTruncateSatf32Toi64 wasmTruncateSatf32Toi64 = 239;
        WasmTruncateSatf64Toi64 wasmTruncateSatf64Toi64 = 240;
        WasmReassign wasmReassign = 241;
        WasmDefineGlobal wasmDefineGlobal = 242;
        WasmDefineTable wasmDefineTable = 243;
        WasmDefineMemory wasmDefineMemory = 244;
        WasmDefineDataSegment wasmDefineDataSegment = 245;
        WasmLoadGlobal wasmLoadGlobal = 246;
        WasmStoreGlobal wasmStoreGlobal = 247;
        WasmTableGet wasmTableGet = 248;
        WasmTableSet wasmTableSet = 249;
        WasmTableSize wasmTableSize = 250;
        WasmTableGrow wasmTableGrow = 251;
        WasmCallIndirect wasmCallIndirect = 252;
        WasmCallDirect wasmCallDirect = 253;
        WasmReturnCallDirect wasmReturnCallDirect = 254;
        WasmReturnCallIndirect wasmReturnCallIndirect = 255;
        WasmMemoryLoad wasmMemoryLoad = 256;
        WasmMemoryStore wasmMemoryStore = 257;
        WasmAtomicLoad wasmAtomicLoad = 258;
        WasmAtomicStore wasmAtomicStore = 259;
        WasmAtomicRMW wasmAtomicRMW = 260;
        WasmAtomicCmpxchg wasmAtomicCmpxchg = 261;
        WasmMemorySize wasmMemorySize = 262;
        WasmMemoryGrow wasmMemoryGrow = 263;
        WasmMemoryFill wasmMemoryFill = 264;
        WasmMemoryInit wasmMemoryInit = 265;
        WasmDropDataSegment wasmDropDataSegment = 266;
        BeginWasmFunction beginWasmFunction = 267;
        EndWasmFunction endWasmFunction = 268;
        WasmBeginBlock wasmBeginBlock = 269;
        WasmEndBlock wasmEndBlock = 270;
        WasmBeginLoop wasmBeginLoop = 271;
        WasmEndLoop wasmEndLoop = 272;
        WasmBranch wasmBranch = 273;
        WasmBranchIf wasmBranchIf = 274;
        WasmBranchTable wasmBranchTable = 275;
        WasmNop wasmNop = 276;
        WasmBeginIf wasmBeginIf = 277;
        WasmBeginElse wasmBeginElse = 278;
        WasmEndIf wasmEndIf = 279;
        WasmBeginTryTable wasmBeginTryTable = 280;
        WasmEndTryTable wasmEndTryTable = 281;
        WasmBeginTry wasmBeginTry = 282;
        WasmBeginCatchAll wasmBeginCatchAll = 283;
        WasmBeginCatch wasmBeginCatch = 284;
        WasmEndTry wasmEndTry = 285;
        WasmBeginTryDelegate wasmBeginTryDelegate = 286;
        WasmEndTryDelegate wasmEndTryDelegate = 287;
        WasmThrow wasmThrow = 288;
        WasmRethrow wasmRethrow = 289;
        WasmThrowRef wasmThrowRef = 290;
        WasmDefineTag wasmDefineTag = 291;
        ConstSimd128 constSimd128 = 292;
        WasmSimd128Compare wasmSimd128Compare = 293;
        WasmSimd128IntegerUnOp wasmSimd128IntegerUnOp = 294;
        WasmSimd128IntegerBinOp wasmSimd128IntegerBinOp = 295;
        WasmSimd128IntegerTernaryOp wasmSimd128IntegerTernaryOp = 296;
        WasmSimd128FloatUnOp wasmSimd128FloatUnOp = 297;
        WasmSimd128FloatBinOp wasmSimd128FloatBinOp = 298;
        WasmSimd128FloatTernaryOp wasmSimd128FloatTernaryOp = 299;
        WasmSimdSplat wasmSimdSplat = 300;
        WasmSimdExtractLane wasmSimdExtractLane = 301;
        WasmSimdReplaceLane wasmSimdReplaceLane = 302;
        WasmSimdStoreLane wasmSimdStoreLane = 303;
        WasmSimdLoadLane wasmSimdLoadLane = 304;
        WasmSimdLoad wasmSimdLoad = 305;
        WasmUnreachable wasmUnreachable = 306;
        WasmSelect wasmSelect = 307;
        WasmBeginTypeGroup wasmBeginTypeGroup = 308;
        WasmEndTypeGroup wasmEndTypeGroup = 309;
        WasmDefineArrayType wasmDefineArrayType = 310;
        WasmDefineStructType wasmDefineStructType = 311;
        WasmDefineForwardOrSelfReference wasmDefineForwardOrSelfReference = 312;
        WasmResolveForwardReference wasmResolveForwardReference = 313;
        WasmArrayNewFixed wasmArrayNewFixed = 314;
        WasmArrayNewDefault wasmArrayNewDefault = 315;
        WasmArrayLen wasmArrayLen = 316;
        WasmArrayGet wasmArrayGet = 317;
        WasmArraySet wasmArraySet = 318;
        WasmStructNewDefault wasmStructNewDefault = 319;
        WasmStructGet wasmStructGet = 320;
        WasmStructSet wasmStructSet = 321;
        WasmRefNull wasmRefNull = 322;
        WasmRefIsNull wasmRefIsNull = 323;
        WasmRefI31 wasmRefI31 = 324;
        WasmI31Get wasmI31Get = 325;
        WasmAnyConvertExtern wasmAnyConvertExtern = 326;
        WasmExternConvertAny wasmExternConvertAny = 327;
        WasmMemoryCopy wasmMemoryCopy = 328;
        WasmDefineElementSegment wasmDefineElementSegment = 329;
        WasmTableInit wasmTableInit = 330;
        WasmDropElementSegment wasmDropElementSegment = 331;
        WasmTableCopy wasmTableCopy = 332;
        WasmDefineSignatureType wasmDefineSignatureType = 333;
        CreateNamedDisposableVariable createNamedDisposableVariable = 334;
        CreateNamedAsyncDisposableVariable createNamedAsyncDisposableVariable = 335;
    }
}

message Program {
    bytes uuid = 1;
    repeated Instruction code = 2;
    map<sint32, string> comments = 3;
    Program parent = 4;
}